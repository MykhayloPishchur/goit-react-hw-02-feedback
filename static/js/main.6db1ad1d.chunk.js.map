{"version":3,"sources":["Components/FeedbackButtons/feedbackbuttons.module.css","Components/Statistics/stats.module.css","Components/Section/section.module.css","Components/Notification/notification.module.css","Components/FeedbackButtons/FeedbackButtons.js","Components/Statistics/Stats.js","Components/Section/Section.js","Components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","FeedbackButtons","options","onLeaveFeedback","Object","keys","map","item","className","styles","buttons","type","name","onClick","key","Stats","good","neutral","bad","total","stats","Math","round","Section","title","children","section","Notification","message","notification","App","state","handleGetFeedback","e","feedbackName","target","setState","countTotalFeedback","data","reduce","a","b","this","stateValues","values","Component","ReactDOM","render","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,QAAU,mC,gBCA5BD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,aAAe,qC,oKC0BlBC,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,oCACGC,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAAD,OACxB,4BACEC,UAAWC,IAAOC,QAClBC,KAAK,SACLC,KAAML,EACNM,QAASV,EACTW,IAAKP,GAEJA,Q,gBCSIQ,EApBD,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MACnC,OACE,6BACE,wBAAIX,UAAWC,IAAOW,OACpB,sCAAYJ,GACZ,yCAAeC,GACf,qCAAWC,IAEb,iDAAuBG,KAAKC,MAAON,EAAOG,EAAS,KAAnD,O,gBCISI,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,6BAASjB,UAAWC,IAAOiB,SACzB,4BAAKF,GACJC,I,gBCCUE,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,uBAAGpB,UAAWC,IAAOoB,cAAeD,ICCjBE,E,4MACnBC,MAAQ,CACNf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAKPc,kBAAoB,SAACC,GACnB,IAAMC,EAAeD,EAAEE,OAAOvB,KAC9B,EAAKwB,UAAS,SAACL,GAAD,sBACXG,EAAeH,EAAMG,GAAgB,O,EAI1CG,mBAAqB,SAACC,GACpB,OAAOA,EAAKC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,M,uDAGzB,IAAD,EACwBC,KAAKX,MAA5Bf,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjByB,EAAcvC,OAAOwC,OAAOF,KAAKX,OACvC,OACE,oCACE,kBAAC,EAAD,CAASP,MAAO,yBACd,kBAAC,EAAD,CACEtB,QAASwC,KAAKX,MACd5B,gBAAiBuC,KAAKV,qBAI1B,kBAAC,EAAD,CAASR,MAAO,cACbkB,KAAKL,mBAAmBM,GAAe,EACtC,kBAAC,EAAD,CAGExB,MAAOuB,KAAKL,mBAAmBM,GAC/B3B,KAAMA,EACNC,QAASA,EACTC,IAAKA,IAGP,kBAAC,EAAD,CAAcU,QAAS,4B,GA3CFiB,aCFjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6db1ad1d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"feedbackbuttons_buttons__3apCU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"stats_stats__3Gozk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"section_section__3EcR5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"notification_notification__DOgan\"};","import React from \"react\";\r\nimport styles from \"./feedbackbuttons.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackButtons = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      {Object.keys(options).map((item) => (\r\n        <button\r\n          className={styles.buttons}\r\n          type=\"button\"\r\n          name={item}\r\n          onClick={onLeaveFeedback}\r\n          key={item}\r\n        >\r\n          {item}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackButtons.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackButtons;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./stats.module.css\";\r\n\r\nconst Stats = ({ good, neutral, bad, total }) => {\r\n  return (\r\n    <div>\r\n      <ul className={styles.stats}>\r\n        <li>Good : {good}</li>\r\n        <li>Neutral : {neutral}</li>\r\n        <li>Bad : {bad}</li>\r\n      </ul>\r\n      <p>Positive feedback :{Math.round((good / total) * 100)}%</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nStats.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Stats;\r\n\r\n// const countTotal = (data, searchValue) => {\r\n//   const countTotal = Object.values(data).reduce((a, b) => a + b);\r\n//   return Math.round((searchValue / countTotal) * 100);\r\n// };\r\n\r\n// const Stats = ({ objects, searhValue }) => {\r\n//   return (\r\n//     <div>\r\n//       <ul>\r\n//         {Object.entries(objects).map(([key, values]) => (\r\n//           <li key={key}>\r\n//             {key} : {values}\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n\r\n//       <p>Positive feedback :{countTotal(objects, searhValue)}%</p>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./section.module.css\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.section}>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./notification.module.css\";\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={styles.notification}>{message}</p>\r\n);\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport FeedbackOptions from \"./Components/FeedbackButtons/FeedbackButtons\";\nimport Stats from \"./Components/Statistics/Stats\";\nimport Section from \"./Components/Section/Section\";\nimport Notification from \"./Components/Notification/Notification\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    // halo: 3,\n    // ststs: 0,\n  };\n\n  handleGetFeedback = (e) => {\n    const feedbackName = e.target.name;\n    this.setState((state) => ({\n      [feedbackName]: state[feedbackName] + 1,\n    }));\n  };\n\n  countTotalFeedback = (data) => {\n    return data.reduce((a, b) => a + b);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const stateValues = Object.values(this.state);\n    return (\n      <>\n        <Section title={\"Please leave feedback\"}>\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.handleGetFeedback}\n          ></FeedbackOptions>\n        </Section>\n\n        <Section title={\"Statistics\"}>\n          {this.countTotalFeedback(stateValues) > 0 ? (\n            <Stats\n              // objects={this.state}\n              // searhValue={this.state.good}\n              total={this.countTotalFeedback(stateValues)}\n              good={good}\n              neutral={neutral}\n              bad={bad}\n            ></Stats>\n          ) : (\n            <Notification message={\"No feedback given\"}></Notification>\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}